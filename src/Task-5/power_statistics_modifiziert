import psutil
import datetime
import time
from pymongo import MongoClient
 
class Leistung:
    def __init__(self, cpu=None, ram_total=None, ram_used=None, zeitstempel=None):
        if cpu is None or ram_total is None or ram_used is None or zeitstempel is None:
            self.cpu = psutil.cpu_percent(interval=1)
            self.ram_total = psutil.virtual_memory().total
            self.ram_used = psutil.virtual_memory().used
            self.zeitstempel = datetime.datetime.now()
        else:
            self.cpu = cpu
            self.ram_total = ram_total
            self.ram_used = ram_used
            self.zeitstempel = zeitstempel
 
    def to_dict(self):
        return {
            "cpu": self.cpu,
            "ram_total": self.ram_total,
            "ram_used": self.ram_used,
            "zeitstempel": self.zeitstempel
        }
 
def log_messung_stats():
    client = MongoClient("mongodb://localhost:27017")
    db = client["messung_stats"]
    datenbank_sammlung = db["logs"]
 
    messung = Leistung()
    datenbank_sammlung.insert_one(messung.to_dict())
 
    anzahl_logs = datenbank_sammlung.count_documents({})
    if anzahl_logs > 10000:
        to_delete = anzahl_logs - 10000
        alte_eintraege = datenbank_sammlung.find().sort("zeitstempel", 1).limit(to_delete)
        for log in alte_eintraege:
            datenbank_sammlung.delete_one({"_id": log["_id"]})
 
    client.close()
 
def hauptschleife():
    while True:
        log_messung_stats()
        time.sleep(1)
 
if __name__ == "__hauptschleife__":
    hauptschleife()